name: "Helm template check"
description: "Verify helm generation template"
inputs:
  aws-access-key-id:
    description: AWS access key ID to perform the helm login (if empty no login will be performed)
    required: false
    default: ""
  aws-region:
    description: AWS region where the ECR repo is
    required: false
    default: "me-south-1"
  aws-secret-access-key:
    description: AWS secret access key to perform the helm login (if empty no login will be performed)
    required: false
    default: ""
  chart-path:
    description: Path of the helm chart
    required: false
    default: chart
  disable-checkout:
    description: Set to true to disable the code checkout step
    required: false
    default: false
  service-name:
    description: Defining service-name for charts
    required: true
    default: "${{ github.event.repository.name }}"
  values-staging:
    description: Helm values for staging
    required: true
    default: "chart/values-staging.yaml"
  values-production:
    description: Helm values for production
    required: true
    default: "chart/values-production.yaml"
runs:
  using: "composite"
  steps:
    - if: inputs.disable-checkout != 'true'
      name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Configure AWS Credentials
      if: ${{ inputs.aws-access-key-id && inputs.aws-secret-access-key }}
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to ECR
      if: ${{ inputs.aws-access-key-id && inputs.aws-secret-access-key }}
      uses: aws-actions/amazon-ecr-login@v1.5.3

    - name: Build dependencies
      shell: bash
      working-directory: ${{ inputs.chart-path }}
      run: helm dependency build

    - name: Helm template (staging)
      shell: bash
      run: helm template ${{inputs.service-name}} ${{inputs.chart-path}} --debug -f ${{ inputs.values-staging }}

    - name: Helm template (production)
      shell: bash
      run: helm template ${{inputs.service-name}} ${{inputs.chart-path}} --debug -f ${{ inputs.values-production }}
